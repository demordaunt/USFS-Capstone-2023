[{"/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/index.js":"1","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/reportWebVitals.js":"2","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/App.js":"3","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/AboutContent.js":"4","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/template.js":"5","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/ElementContent.js":"6","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/ExplorationTool.js":"7","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/HomeContent.js":"8","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/MapAppContent.js":"9","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/GalleryContent.js":"10","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/DBQueriesContent.js":"11","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/GlobalStyles.jsx":"12","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/ImageSlider.jsx":"13"},{"size":535,"mtime":1677684025861,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1677684025861,"results":"16","hashOfConfig":"15"},{"size":6458,"mtime":1681121649292,"results":"17","hashOfConfig":"15"},{"size":6734,"mtime":1678288997894,"results":"18","hashOfConfig":"15"},{"size":4436,"mtime":1678894903120,"results":"19","hashOfConfig":"15"},{"size":4483,"mtime":1681099532432,"results":"20","hashOfConfig":"15"},{"size":334,"mtime":1681121649292,"results":"21","hashOfConfig":"15"},{"size":12903,"mtime":1681144149602,"results":"22","hashOfConfig":"15"},{"size":332,"mtime":1681121649292,"results":"23","hashOfConfig":"15"},{"size":1974,"mtime":1681121649292,"results":"24","hashOfConfig":"15"},{"size":4481,"mtime":1681121649292,"results":"25","hashOfConfig":"15"},{"size":206,"mtime":1678428852546,"results":"26","hashOfConfig":"15"},{"size":2509,"mtime":1680042690933,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qraia5",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},"/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/index.js",[],[],"/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/reportWebVitals.js",[],[],"/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/App.js",["74"],[],"import React, { useState, useEffect } from 'react';\nimport {Box, Container, Tabs, Tab, Typography, Menu, MenuItem, MenuList, Stack, AppBar, Popper, Paper} from '@mui/material';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport './App.css';\nimport HomeContent from './HomeContent';\nimport ElementContent from './ElementContent';\nimport AboutContent from './AboutContent';\nimport usfsLogo from './images/usfs-logo.png'\nimport TemplateContent from './template';\nimport GalleryContent from './GalleryContent';\nimport DBQueriesContent from './DBQueriesContent'\nimport MapAppContent from './MapAppContent'\nimport ExplorationTool from './ExplorationTool';\n\nfunction App() {\n  const [currPage, setCurrPage] = useState(\"home\");\n  const [tab, setTab] = useState(1);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [currPage]);\n\n  const handleChange = (event, newValue) => {\n    setTab(newValue);\n    setAnchorEl(event.currentTarget);\n    console.log(newValue);\n  };\n\n  const open = Boolean(anchorEl);\n  const handleClick = (event, pageID) => {\n    setCurrPage(pageID);\n    handleClose()\n    console.log(currPage)\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    console.log(open);\n  };\n\n  function ToolsMenu({open, anchorEl, handleClose, handleClick, tab}) {\n    return (\n      <Popper\n        anchorEl={anchorEl}\n        open={open && tab === 2}\n        placement={'bottom-start'}\n        >\n        <Paper>\n          <MenuList onMouseLeave={handleClose}>\n            <MenuItem onClick={(event) => handleClick(event, \"dbQueries\")}>Database Queries</MenuItem>\n            <MenuItem onClick={(event) => handleClick(event, \"elementAnalysis\")}>Element Analysis Thresholds & Sensitivity Ratings</MenuItem>\n          </MenuList>\n        </Paper>\n      </Popper>\n    );\n  }\n\n  function OtherMenu({open, anchorEl, handleClose, tab}) {\n    return (\n      <Popper\n        anchorEl={anchorEl}\n        open={open && tab === 5}\n        placement={'bottom-start'}\n      >\n        <Paper>\n          <MenuList onMouseLeave={handleClose}>\n            <MenuItem onClick={handleClose}>Fun with Lichens and Air Quality</MenuItem>\n            <MenuItem onClick={handleClose}>Lichens and Air Quality Workgroup</MenuItem>\n            <MenuItem onClick={handleClose}>Links to Other Resources</MenuItem>\n          </MenuList>\n        </Paper>\n      </Popper>\n    );\n  }\n\n  function GalleryMenu({open, anchorEl, handleClose, handleClick, tab}) {\n    return (\n      <Popper\n        anchorEl={anchorEl}\n        open={open && tab === 3}\n        placement={'bottom-start'}\n      >\n        <Paper>\n          <MenuList onMouseLeave={handleClose}>\n            <MenuItem onClick={(event) => handleClick(event, \"gallery\")}>Photographs</MenuItem>\n            <MenuItem onClick={handleClose}>Illustrations</MenuItem>\n            <MenuItem onClick={handleClose}>Lichen Structures</MenuItem>\n          </MenuList>\n        </Paper>\n      </Popper>\n    );\n  }\n\n  return (\n  \n      <Box onMouseLeave={handleClose} sx={{ bgcolor: '#95a984' }}>\n        <AppBar position={'relative'}>\n          <Tabs sx={{background: '#5b8441'}} value={tab} onChange={handleChange}>\n            <Stack\n              justifyContent='flex-start'\n              direction=\"row\"\n              spacing={2}\n              marginTop={2}\n              marginLeft={2}\n              marginRight={8}\n              marginBottom={2}\n            >\n              \n                <img class='logo' src={usfsLogo} alt='logo'/>\n                <Stack\n                direction='column'\n                >\n                  <Typography variant='h4' fontFamily='monospace'>United States Forest Service</Typography>\n                  <Typography variant='h6' >National Lichens & Air Quality Database and Clearinghouse</Typography>\n                </Stack>\n              \n            </Stack>\n            <Tab label=\"Home\" onMouseEnter={(event) => handleChange(event, 1)} onClick={(event) => handleClick(event, \"home\")} sx={{fontSize: 18, fontWeight: 'bold'}}/>\n            <Tab label=\"Tools\" icon={<ArrowDropDownIcon fontSize={'medium'}/>} iconPosition=\"end\" onMouseEnter={(event) => handleChange(event, 2)} sx={{fontSize: 18, fontWeight: 'bold'}}/>\n            <Tab label=\"Gallery\" icon={<ArrowDropDownIcon fontSize={'medium'}/>} iconPosition=\"end\" onMouseEnter={(event) => handleChange(event, 3)} sx={{fontSize: 18, fontWeight: 'bold'}}/>\n            <Tab label=\"Reports\" onMouseEnter={(event) => handleChange(event, 4)} onClick={(event) => handleClick(event, \"reports\")} sx={{fontSize: 18, fontWeight: 'bold'}}/>\n            <Tab label=\"Other\" icon={<ArrowDropDownIcon fontSize={'medium'}/>} iconPosition=\"end\" onMouseEnter={(event) => handleChange(event, 5)} sx={{fontSize: 18, fontWeight: 'bold'}}/>\n            <Tab label=\"Contact\" onMouseEnter={(event) => handleChange(event, 6)} onClick={(event) => handleClick(event, \"contact\")} sx={{fontSize: 18, fontWeight: 'bold'}}/>\n            {/* <Tab label=\"Test\" value={\"test\"} onClick={handleClick} sx={{fontSize: 18, fontWeight: 'bold'}}/> */}\n\n            <ToolsMenu open={open} anchorEl={anchorEl} handleClose={handleClose} handleClick={handleClick} tab={tab}/>\n            <OtherMenu open={open} anchorEl={anchorEl} handleClose={handleClose} tab={tab}/>\n            <GalleryMenu open={open} anchorEl={anchorEl} handleClose={handleClose} handleClick={handleClick} tab={tab}/>\n\n          </Tabs>\n        </AppBar>\n        <Container maxWidth='lg' sx={{marginY: 5}}>\n          <HomeContent hidden={currPage !== \"home\"} onButtonClick={handleClick}/>\n          <GalleryContent hidden={currPage !== \"gallery\"}/>\n          <DBQueriesContent hidden={currPage !== \"dbQueries\"} onButtonClick={handleClick}/>\n          <ElementContent hidden={currPage !== \"elementAnalysis\"}/>\n          <AboutContent hidden={currPage !== \"contact\"}/>\n          <TemplateContent hidden={currPage !== \"reports\"}/>\n          <MapAppContent hidden={currPage !== \"mapApp\"} onButtonClick={handleClick}/>\n          <ExplorationTool hidden={currPage !== \"explorationTool\"} onButtonClick={handleClick}/>\n\n          {/* <Box hidden={tab !== 5}>Contact content goes here.</Box>\n          <Box hidden={tab !== 6}>database queries page</Box> */}\n        </Container>\n        <footer style={{opacity: 0}}>.</footer> {/* this is to get rid of the white footer but nothing should actually showup here */}\n      </Box>\n  );\n}\n\nexport default App;\n","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/AboutContent.js",["75"],[],"import {Box, Grid, Typography, Link} from '@mui/material';\n\nconst body2 = 'The FS has been collecting lichen data since the 1970s, with nationwide emphasis beginning in 1993. Since 1993, the National Forest System (NFS) and the Forest Inventory and Analysis Program (FIA) have collected lichen data on forestland. This database unites data collected by the USFS as well as partnering agencies and researchers, including data on both community composition and elemental analysis of lichen tissue. As of November 13, 2017, the database houses 171,489 lichen records and 15,383 lichen tissue samples collected on 10,623 plots and is usually updated annually to include new data and add new functionality. Most data focus on macrolichen (non-crustose) epiphytes in forest habitats although some data on ground, rock, and crustose lichens are available.';\n\nconst body3 = `NFS: The USFS Air Program conducts lichen surveys and collects lichens for elemental analysis on sites within the national forest system. Because Wilderness air quality is more stringently protected under the Clean Air Act, much of the focus is on Wilderness. Actual plot coordinates and elevations are provided for surveys on non-FIA plots. On FIA-plots, fuzzed coordinates are provided (see FIA below). Overall, the Air Program uses lichens to tell us how air pollution and climate are affecting the forested landscape and how we are doing as managers in mitigating changing atmospheric conditions and pollution. Most of the lichen data is accompanied by measured and modeled site data related to forest structure and composition, physical and ecological characteristics, climate, and air quality. For questions please contact Linda Geiser.\n\nFIA: The FIA Program collects forest measurements on a systematic grid across the United States. Most FIA lichen surveys can be linked to data on trees, invasive plant species, understory vegetation, down woody material and soils (http://apps.fs.fed.us/fiadb-downloads/datamart.html). Plots include both public and private land so geographic coordinates for FIA plots are \"fuzzed\" to protect landowner privacy. Most coordinates fall within 0.5 mi of the actual plot location. For questions please contact Sarah Jovan.`;\n\nconst databaseQueriesFeature = 'Query the USFS database of lichen species by geographic area or sensitivity class; retrieve lichen elemental analysis data';\n\nconst elementalAnalysisFeature = 'Aids for interpreting lichen data'\n\nconst reportsFeature = 'Full articles, citations and PowerPoint presentations pertaining to lichens and air quality monitoring in national forests and parks'\n\nconst imagesFeature = 'Get a drawing or photograph of a lichen, submit your own images'\n\nexport default function HomeContent({hidden}) {\n    return (\n        <Box hidden={hidden}>\n            <Grid container direction='column' spacing={2}>\n                <Grid item>\n                    <Grid container spacing={2}>\n                        <Grid item xs={3}>\n                            <Box sx={{height: '200px', background: 'black', color: 'white'}}>Image here</Box>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <Typography variant='h5'>Overview</Typography>\n                            <Typography variant='body1'>{body2}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Grid container spacing={2}>\n                        <Grid item xs={9}>\n                            <Typography variant='h5'>Contributors</Typography>\n                            <Typography variant='body1'>{body3}</Typography>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Box sx={{height: '200px', background: 'black', color: 'white'}}>Image here</Box>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Typography variant='h5'>Website Features</Typography>\n                    <Grid container spacing={2} direction='row'>\n                        <Grid item xs={6}>\n                            <Grid container spacing={2} direction='column'>\n                                <Grid item>\n                                    <Typography variant='h6'>Database Queries</Typography>\n                                    <Typography>{databaseQueriesFeature}</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant='h6'>Elemental Analysis Thresholds & Sensitivity Ratings</Typography>\n                                    <Typography>{elementalAnalysisFeature}</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant='h6'>Reports, Publications & Protocols</Typography>\n                                    <Typography>{reportsFeature}</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant='h6'>Lichen Images</Typography>\n                                    <Typography>{imagesFeature}</Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Grid container spacing={2} direction='column'>\n                            <Grid item>\n                                    <Typography variant='h6'>Database Queries</Typography>\n                                    <Typography>{databaseQueriesFeature}</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant='h6'>Elemental Analysis Thresholds & Sensitivity Ratings</Typography>\n                                    <Typography>{elementalAnalysisFeature}</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant='h6'>Reports, Publications & Protocols</Typography>\n                                    <Typography>{reportsFeature}</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant='h6'>Lichen Images</Typography>\n                                    <Typography>{imagesFeature}</Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/template.js",[],[],"/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/ElementContent.js",[],[],"/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/ExplorationTool.js",["76","77"],[],"import React, { useState } from 'react';\nimport {Box} from '@mui/material'\n\nexport default function ExplorationTool({hidden}) {\n\n    return (\n        <Box hidden={hidden}>\n            <iframe height=\"650\" width=\"100%\" frameborder=\"no\" src=\"https://usfs-capstone-2023.shinyapps.io/figure3-shiny-app/\"> </iframe>\n        </Box>\n    );\n}","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/HomeContent.js",["78","79","80","81","82"],[],"/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/MapAppContent.js",["83","84"],[],"import React, { useState } from 'react';\nimport {Box} from '@mui/material'\n\nexport default function MapAppContent({hidden}) {\n\n    return (\n        <Box hidden={hidden}>\n            <iframe height=\"600\" width=\"100%\" frameborder=\"no\" src=\"https://usfs-capstone-2023.shinyapps.io/figure1-shiny-app/\"> </iframe>\n        </Box>\n    );\n}","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/GalleryContent.js",["85","86","87"],[],"import React, {useState} from 'react';\nimport {Box, Typography, ImageList, ImageListItem, Modal, Backdrop} from '@mui/material'\n\nconst images = [];\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: '60%',\n    height: '80%',\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 0,\n  };\n\nfunction importAll(r) {\n  r.keys().forEach((key) => images.push(key));\n}\n\nimportAll(require.context('./images', false, /\\.(png|jpe?g|svg)$/));\n\nexport default function GalleryContent({hidden}) {\n    const [open, setOpen] = useState(false);\n    const [selectedImg, setSelectedImg] = useState(null);\n\n    const handleOpen = (src) => {\n        setSelectedImg(src);\n        setOpen(true);\n    }\n\n    const handleClose = () => { \n        setSelectedImg(null);\n        setOpen(false);\n    }\n\n    return (\n\n        <Box hidden={hidden}>\n            <ImageList variant=\"masonry\" cols={3} gap={10}>\n                {images.map((testImg) => (\n                    <ImageListItem key={testImg} onClick={() => handleOpen(testImg)}>\n                        <img\n                            src={`./images/${testImg}`}\n                            alt={`./images/${testImg}`}\n                            loading=\"lazy\"\n                        />\n                    </ImageListItem>\n                ))}\n            </ImageList>\n\n            {selectedImg && (<Modal\n                open={open}\n                onClose={handleClose}\n                slotProps={{\n                    backdrop: {\n                        onClick: handleClose,\n                    },\n                }}\n            >\n                <Box sx={style}>\n                    <img\n                        src={`./images/${selectedImg}`}\n                        width={'100%'}\n                        height={'100%'}\n                    />\n                </Box>\n            </Modal>\n            )}\n        </Box>\n    );\n}","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/DBQueriesContent.js",["88","89","90","91","92","93"],[],"import React, {useState} from 'react';\nimport {Box, Typography, Grid, Stack, Paper, Card, CardContent, CardActions, Container, Button} from '@mui/material';\n\nexport default function DBQueriesContent({hidden, onButtonClick}) {\n    const lichenPlotBody = `Query the plot database to find out where lichen surveys have been conducted and to get information about physical parameters, climate, vegetation and other environmental conditions measured or modeled for these sites.`\n\n    const elementalAnalysisBody = `Query the elemental analysis database to find out what elemental analyses have been conducted in a geographic area of your choice, and what species were measured. Use the draft thresholds page to determine if the values observed were within ranges expected for clean sites.`\n\n    const elementThresholdBody = `Query lichen species and element data for Region 6 to retrieve element threshold (percent of threshold) values for that species and element, from any plot.`\n\n    const lichenSpeciesBody = `Query the lichen community database to find out what lichens have been observed in a geographic area and whether the communities at a given location contain species known to be sensitive to air pollution.`\n\n    return (\n        <Box hidden={hidden}>\n            <Typography variant='h5'>Explanation of Database Queries</Typography><br/>\n            <Grid container spacing={3} justifyContent={\"space-around\"}>\n                <Grid item>\n                    <Card raised={true}>\n                        <CardContent sx={{textAlign: \"center\"}}>\n                            <img src={'./images/analysisTool.png'} width={450} height={250} onClick={(event) => onButtonClick(event, \"mapApp\")} style={{cursor: 'pointer'}}/>\n                            <Typography>\n                                Explore plot data using our map app!\n                            </Typography>\n                        </CardContent>\n                        <CardActions sx={{justifyContent: \"center\"}}>\n                            <Button\n                                size=\"medium\"\n                                variant='contained'\n                                onClick={(event) =>\n                                    onButtonClick(event, \"mapApp\")\n                                }\n                            >\n                                Plot Now\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n                <Grid item>\n                    <Card raised={true}>\n                        <CardContent sx={{textAlign: \"center\"}}>\n                            <img src={'./images/databaseExplorationTool.jpg'} width={450} height={250} onClick={(event) => onButtonClick(event, \"explorationTool\")} style={{cursor: 'pointer'}}/>\n                            <Typography>\n                                Explore and analyze using our Database Exploration Tool!\n                            </Typography>\n                        </CardContent>\n                        <CardActions sx={{justifyContent: \"center\"}}>\n                            <Button\n                                size=\"medium\"\n                                variant='contained'\n                                onClick={(event) =>\n                                    onButtonClick(event, \"explorationTool\")\n                                }\n                            >\n                                Explore Now\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n            </Grid><br/>\n\n            <Grid container spacing={3}>\n                <Grid item>\n                    <Typography variant='h6'>Lichen Plot Data</Typography>\n                    <Typography>{lichenPlotBody}</Typography>\n                </Grid>\n                <Grid item>\n                    <Typography variant='h6'>Elemental Analysis Data</Typography>\n                    <Typography>{elementalAnalysisBody}</Typography>\n                </Grid>\n                <Grid item>\n                    <Typography variant='h6'>Element Threshold Data</Typography>\n                    <Typography>{elementThresholdBody}</Typography>\n                </Grid>\n                <Grid item>\n                    <Typography variant='h6'>Lichen Species Data</Typography>\n                    <Typography>{lichenSpeciesBody}</Typography>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/GlobalStyles.jsx",[],[],"/Users/carterdemo/Developer/USFS-Capstone-2023/react_sandbox/my-app/src/ImageSlider.jsx",["94"],[],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst IndicatorWrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  position: absolute;\n  bottom: 15px;\n  right: 15px;\n`;\n\nconst Dot = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 6px;\n  background-color: white;\n  opacity: ${(props) => (props.isActive ? 1 : 0.5)};\n  margin: 5px;\n  transition: 750ms all ease-in-out;\n  padding: 8px;\n`;\n\nconst Indicator = ({ currentSlide, amountSlides, nextSlide }) => {\n  return (\n    <IndicatorWrapper>\n      {Array(amountSlides)\n        .fill(1)\n        .map((_, i) => (\n          <Dot\n            key={i}\n            isActive={currentSlide === i}\n            onClick={() => nextSlide(i)}\n          />\n        ))}\n    </IndicatorWrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  width: 98.68%;\n  display: flex;\n  flex-wrap: nowrap;\n  overflow-x: hidden;\n  position: relative;\n`;\n\nconst Slide = styled.div`\n  height: 100%;\n  width: 100%;\n  flex-shrink: 0;\n  background-position: center;\n  background-size: cover;\n  transition: 750ms all ease-in-out;\n`;\n\nconst ChildrenWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Gradient = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.6);\n`;\n\nconst ImageSlider = ({\n  images = [],\n  autoPlay = true,\n  autoPlayTime = 5000, //Change the frequency of how often the images will automatically slide\n  children,\n  ...props\n}) => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  function nextSlide(slideIndex = currentSlide + 1) {\n    const newSlideIndex = slideIndex >= images.length ? 0 : slideIndex;\n\n    setCurrentSlide(newSlideIndex);\n  }\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      nextSlide();\n    }, autoPlayTime);\n\n    return () => clearTimeout(timer);\n  }, [currentSlide]);\n\n  return (\n    <Wrapper {...props}>\n      {images.map((imageUrl, index) => (\n        <Slide\n          key={index}\n          style={{\n            backgroundImage: `url(${imageUrl})`,\n            marginLeft: index === 0 ? `-${currentSlide * 100}%` : undefined,\n          }}\n        ></Slide>\n      ))}\n      <Gradient />\n      <Indicator\n        currentSlide={currentSlide}\n        amountSlides={images.length}\n        nextSlide={nextSlide}\n      />\n      <ChildrenWrapper>{children}</ChildrenWrapper>\n    </Wrapper>\n  );\n};\n\nexport default ImageSlider;",{"ruleId":"95","severity":1,"message":"96","line":2,"column":48,"nodeType":"97","messageId":"98","endLine":2,"endColumn":52},{"ruleId":"95","severity":1,"message":"99","line":1,"column":32,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"100","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":8,"column":13,"nodeType":"103","endLine":8,"endColumn":129},{"ruleId":"95","severity":1,"message":"104","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":21},{"ruleId":"95","severity":1,"message":"105","line":27,"column":7,"nodeType":"97","messageId":"98","endLine":27,"endColumn":11},{"ruleId":"106","severity":1,"message":"107","line":105,"column":29,"nodeType":"103","endLine":105,"endColumn":102},{"ruleId":"106","severity":1,"message":"107","line":124,"column":29,"nodeType":"103","endLine":124,"endColumn":97},{"ruleId":"106","severity":1,"message":"107","line":142,"column":29,"nodeType":"103","endLine":142,"endColumn":94},{"ruleId":"95","severity":1,"message":"100","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":8,"column":13,"nodeType":"103","endLine":8,"endColumn":129},{"ruleId":"95","severity":1,"message":"108","line":2,"column":14,"nodeType":"97","messageId":"98","endLine":2,"endColumn":24},{"ruleId":"95","severity":1,"message":"109","line":2,"column":59,"nodeType":"97","messageId":"98","endLine":2,"endColumn":67},{"ruleId":"106","severity":1,"message":"107","line":63,"column":21,"nodeType":"103","endLine":67,"endColumn":23},{"ruleId":"95","severity":1,"message":"100","line":1,"column":16,"nodeType":"97","messageId":"98","endLine":1,"endColumn":24},{"ruleId":"95","severity":1,"message":"110","line":2,"column":32,"nodeType":"97","messageId":"98","endLine":2,"endColumn":37},{"ruleId":"95","severity":1,"message":"111","line":2,"column":39,"nodeType":"97","messageId":"98","endLine":2,"endColumn":44},{"ruleId":"95","severity":1,"message":"112","line":2,"column":78,"nodeType":"97","messageId":"98","endLine":2,"endColumn":87},{"ruleId":"106","severity":1,"message":"107","line":20,"column":29,"nodeType":"103","endLine":20,"endColumn":174},{"ruleId":"106","severity":1,"message":"107","line":41,"column":29,"nodeType":"103","endLine":41,"endColumn":194},{"ruleId":"113","severity":1,"message":"114","line":94,"column":6,"nodeType":"115","endLine":94,"endColumn":20,"suggestions":"116"},"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useState' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'AliceCarousel' is defined but never used.","'Item' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Typography' is defined but never used.","'Backdrop' is defined but never used.","'Stack' is defined but never used.","'Paper' is defined but never used.","'Container' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'autoPlayTime' and 'nextSlide'. Either include them or remove the dependency array.","ArrayExpression",["117"],{"desc":"118","fix":"119"},"Update the dependencies array to be: [autoPlayTime, currentSlide, nextSlide]",{"range":"120","text":"121"},[1940,1954],"[autoPlayTime, currentSlide, nextSlide]"]